{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "This is a CloudFormation template which helps to create AWS instance which executes TA checks on payer and linked accounts.",
  "Parameters": {
    "LinkedAccountId": {
      "Description": "Enter your linked account numbers - comma separated.",
      "Type": "String"
    },
    "TrustedAdvisorS3Bucket": {
      "Description": "Enter the name of existing S3 bucket where you want to store Trusted Advisor checks. Create a bucket first if you do not have one yet.",
      "Type": "String"
    },
    "CheckRepeat": {
      "Description": "How often do you want to refresh TA checks. Minimum and default is one week. If you want monthly enter 4, etc.",
      "Type": "String",
      "Default" : "1"
    },
    "CFAWSTrustedAdvisorAdministrationKeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "Must be the name of an existing EC2 KeyPair."
    },
    "CFAWSTrustedAdvisorAdministrationSubnet01": {
      "Description": "Name of an existing VPC subnet your instance will be running in",
      "Type": "AWS::EC2::Subnet::Id",
      "ConstraintDescription": "Must be the name of an existing subnet."
    },
    "CFAWSTrustedAdvisorAdministrationSecurityGroup": {
      "Description": "Name of an existing EC2 Security Group to enable SSH access to the new TA crawler instance created by this template",
      "Type": "AWS::EC2::SecurityGroup::Id",
      "ConstraintDescription": "Must be the name of an existing EC2 security group."
    }
  },
  "Resources": {
    "CFAWSTrustedAdvisorAdministrationRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": "CFAWSTrustedAdvisorAdministrationRole",
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Path": "/",
        "Policies": [ {
          "PolicyName": "CFAWSTrustedAdvisorAdministrationPolicy",
          "PolicyDocument": {
            "Version" : "2012-10-17",
            "Statement": [ {
              "Effect": "Allow",
              "Action": "support:*",
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/OrganizationAccountAccessRole",
              "Action": "sts:AssumeRole"
            },
            {
              "Effect": "Allow",
              "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:s3:::",
                                        {
                                            "Ref": "TrustedAdvisorS3Bucket"
                                        },
                                        "/*"
                                    ]
                                ]
                            },
              "Action": [
                "s3:PutObject",
                "s3:GetObject",
                "s3:DeleteObject"
              ],
            }
          ]
        }
      }
    ]
  }
},
"CFAWSTrustedAdvisorAdministrationInstanceProfile": {
  "Type": "AWS::IAM::InstanceProfile",
  "Properties": {
    "InstanceProfileName": "CFAWSTrustedAdvisorAdministrationInstanceProfile",
    "Path": "/",
    "Roles": [
      "Ref": "CFAWSTrustedAdvisorAdministrationRole"
    ]
  }
},
"CFAWSTrustedAdvisorAdministrationASG": {
  "Type": "AWS::AutoScaling::AutoScalingGroup",
  "Properties": {
    "Cooldown": "300",
    "DesiredCapacity": "1",
    "HealthCheckGracePeriod": "300",
    "HealthCheckType": "EC2",
    "MaxSize": "1",
    "MinSize": "1",
    "VPCZoneIdentifier": [
      {
        "Ref": "CFAWSTrustedAdvisorAdministrationSubnet01"
      }
    ],
    "LaunchConfigurationName": {
      "Ref": "CFAWSTrustedAdvisorAdministrationLaunchConfiguration"
    },
    "Tags": [
      {
        "Key": "Name",
        "Value": "CFAWSTrustedAdvisorAdministration-auto-scaling-group",
        "PropagateAtLaunch": true
      }
    ],
    "TerminationPolicies": [
      "Default"
    ]
  }
},
"CFAWSTrustedAdvisorAdministrationLaunchConfiguration": {
  "Type": "AWS::AutoScaling::LaunchConfiguration",
  "Properties": {
    "AssociatePublicIpAddress": true,
    "ImageId": "ami-0c9f4705ebe3ff49b",
    "InstanceType": "t2.micro",
    "KeyName": {
          "Ref": "CFAWSTrustedAdvisorAdministrationKeyName"
        },
    "IamInstanceProfile": "CFAWSTrustedAdvisorAdministrationInstanceProfile",
    "SecurityGroups": [
      {
        "Ref": "CFAWSTrustedAdvisorAdministrationSecurityGroup"
      }
    ],
    "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "\n", [
                "#!/bin/bash",
                {
                  "Fn::Join": [
                      "",
                      [
                        "echo \"",
                        {
                          "Ref": "LinkedAccountId"
                        },
                        "\" > /ta-checks/linkedaccounts.txt"
                      ]
                    ]
                },
                {
                  "Fn::Join": [
                      "",
                      [
                        "echo \"",
                        {
                          "Ref": "TrustedAdvisorS3Bucket"
                        },
                        "\" > /ta-checks/trustedadvisors3bucket.txt"
                      ]
                    ]
                },
                {
                  "Fn::Join": [
                      "",
                      [
                        "echo \"",
                        {
                          "Ref": "CheckRepeat"
                        },
                        "\" > /ta-checks/scheduler.txt"
                      ]
                    ]
                },
                "/ta-checks/./format-linked.sh"
              ]
            ]
          }
        }
  }
}
}
}
